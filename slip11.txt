<!DOCTYPE html>
<html>
<head>
    <title>JavaScript Example</title>
    <style>
        #name {
            font-size: 14px;
            color: black;
        }
    </style>
</head>
<body>

<!-- Input field with multiple event handlers -->
<input type="text" id="name" 
    onblur="changeStyle()" 
    onmouseover="changeSize()" 
    onmouseout="resetSize()" 
    onmousedown="changeColor()" 
    onmouseup="resetColor()">

<!-- Image with onload event -->
<img id="img" src="https://via.placeholder.com/150" onload="changeImageSize()">

<script>
    // Function to change font size and color when input loses focus
    function changeStyle() {
        let name = document.getElementById("name").value;
        if (name) {
            document.getElementById("name").style.fontSize = "18px";
            document.getElementById("name").style.color = "red";
        } else {
            document.getElementById("img").style.display = "block";
        }
    }

    // Function to increase font size on mouseover
    function changeSize() {
        document.getElementById("name").style.fontSize = "16px";
    }

    // Function to reset font size on mouseout
    function resetSize() {
        document.getElementById("name").style.fontSize = "14px";
    }

    // Function to change text color to blue on mousedown
    function changeColor() {
        document.getElementById("name").style.color = "blue";
    }

    // Function to reset text color to red on mouseup
    function resetColor() {
        document.getElementById("name").style.color = "red";
    }

    // Function to change the size of the image when loaded
    function changeImageSize() {
        document.getElementById("img").style.width = "200px";
        document.getElementById("img").style.height = "200px";
    }
</script>

</body>
</html>


Q2

import pandas as pd
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import apriori, association_rules

# Creating the dataset
dataset = [['butter', 'bread', 'milk'],
           ['butter', 'flour', 'milk', 'sugar'],
           ['butter', 'eggs', 'milk', 'salt'],
           ['eggs'],
           ['butter', 'flour', 'milk', 'salt']]

# Converting the categorical values into numeric format
te = TransactionEncoder()
te_ary = te.fit(dataset).transform(dataset)
df = pd.DataFrame(te_ary, columns=te.columns_)

# Generating frequent itemsets using Apriori algorithm with different min_sup values
min_sup_values = [0.4, 0.3, 0.2]
for min_sup in min_sup_values:
    frequent_itemsets = apriori(df, min_support=min_sup, use_colnames=True)
    print(f"Frequent Itemsets with minimum support of {min_sup}")
    print(frequent_itemsets)
    
    # Generating association rules
    rules = association_rules(frequent_itemsets, metric="confidence", min_threshold=0.7)
    print(f"Association Rules with minimum support of {min_sup}")
    print(rules)
