<!DOCTYPE html>
<html>
<head>
    <title>AJAX Program</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>
<body>
    <label for="name">Enter your name:</label>
    <input type="text" id="name" name="name">
    <div id="response"></div>
    <script src="ajax.js"></script>
</body>
</html>

$(document).ready(function () {
    // Attach an event listener to the name input field
    $('#name').on('input', function () {
        // Get the name entered by the user
        var name = $(this).val();

        // Send an AJAX request to the server
        $.ajax({
            url: 'server.php', // URL to PHP file
            type: 'POST', // HTTP method
            data: { name: name }, // Data sent to server
            success: function (response) {
                // Update the response div with the server’s response
                $('#response').html(response);
            },
            error: function () {
                $('#response').html('Error occurred while processing request!');
            }
        });
    });
});

<?php
// Get the name entered by the user
$name = $_POST['name'];

// Check if the name is empty
if (empty($name)) {
    echo 'Stranger, please tell me your name!';
}
// Check if the name is one of the master names
elseif ($name == 'Rohit' || $name == 'Virat' || $name == 'Dhoni' || $name == 'Ashwin' || $name == 'Harbhajan') {
    echo 'Hello, master!';
}
// Otherwise, the server doesn’t know the user
else {
    echo $name . ', I don\'t know you!';
}
?>


Q2

# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load the dataset
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/nursery/nursery.data"
names = ['parents', 'has_nurs', 'form', 'children', 'housing', 'finance', 'social', 'health', 'class']
dataset = pd.read_csv(url, names=names)

# Identify independent and target variables
X = dataset.drop('class', axis=1)  # Independent variables
y = dataset['class']  # Target variable

# Convert categorical variables into numerical variables using one-hot encoding
X = pd.get_dummies(X)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build a linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Print the coefficients of the model
print("Intercept:", model.intercept_)
print("Coefficients:", model.coef_)

# Predict the target variable for the testing set
y_pred = model.predict(X_test)

# Evaluate the model using Mean Squared Error (MSE)
mse = mean_squared_error(y_test, y_pred)
print("MSE:", mse)
